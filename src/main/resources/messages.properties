#------------------------------------------------------------------------#
validation.user.name.notBlank=The user name cannot be blank.
validation.user.name.size=The user name length ''${validatedValue}'' must be between {min} and {max} characters long.
validation.user.name.notAlphanumeric=The user name can only contain characters.
validation.user.surname.notBlank=The user surname cannot be blank.
validation.user.surname.size=The user surname length ''${validatedValue}'' must be between {min} and {max} characters long.
validation.user.surname.notAlphanumeric=The user surname can only contain characters.
validation.user.gender.notBlank=The user gender cannot be blank.
validation.user.gender.isValid=The user gender must be M (MALE) or F (FEMALE).
validation.user.type.isValid=The user type must be CUSTOMER, EMPLOYEE or ADMIN.
validation.user.email.notBlank=Email cannot be blank.

validation.book.title.notBlank=The book title cannot be blank.
validation.book.title.size=The book title length ''${validatedValue}'' must be between {min} and {max} characters long.
validation.book.author.notBlank=The book author cannot be blank.
validation.book.author.size=The book author length ''${validatedValue}'' must be between {min} and {max} characters long.
validation.book.publisher.notBlank=The book publisher cannot be blank.
validation.book.publisher.size=The book publisher length ''${validatedValue}'' must be between {min} and {max} characters long.
validation.book.price.notNull=The book price cannot be null.
validation.book.price.positive=The book price must be positive.

validation.order.customerId.notNull=The order customerId cannot be null.
validation.order.bookOrder.notEmpty=Book orders cannot be empty.
validation.order.endDate.earlierThan.startDate=Start date must be equal or earlier than end date.

#------------------------------------------------------------------------#
service.exception.user.not.found=User not found for given id: {0}
service.exception.user.unauthorized.user=User doesnt have privilege to register this type of user.

service.exception.book.not.found=Book not found for given id: {0}
service.exception.book.all.books.not.exist=Ordered books are not exist.

service.exception.order.not.found=Order not found for given id: {0}

service.exception.book.quantity.on.hand.below.zero=Insufficient quantity on hand for given book id: {0}